library(tidymodels)
library(ISLR) # For the Smarket data set
library(nycflights13) # For the Bikeshare data set
library(discrim)
library(magrittr) # needs to be run every time you start R and want to use %>%
library(dplyr)
install.packages("tidyverse")
install.packages("tidymodels")
install.packages("tidymodels")
flights1 <- flights %>%
mutate(delay = factor(arr_delay > 0, c(TRUE, FALSE),
c("Delayed", "On time"))) %>%
filter(month == 1, !is.na(delay)) %>%
select(delay, hour, minute, dep_delay, carrier, distance)
library(tidymodels)
library(ISLR)
library(nycflights13)
library(discrim)
library(magrittr)
library(dplyr)
library(tidyverse)
flights1 <- flights %>%
mutate(delay = factor(arr_delay > 0, c(TRUE, FALSE),
c("Delayed", "On time"))) %>%
filter(month == 1, !is.na(delay)) %>%
select(delay, hour, minute, dep_delay, carrier, distance)
lda_spec <- discrim_linear() %>%
set_mode("classification") %>%
set_engine("MASS")
lda_fit <- lda_spec %>%
fit(delay ~ dep_delay + distance, data = flights_train)
flights_split <- initial_split(flights1)
flights_train <- training(flights_split)
flights_test <- testing(flights_split)
lda_spec <- discrim_linear() %>%
set_mode("classification") %>%
set_engine("MASS")
lda_fit <- lda_spec %>%
fit(delay ~ dep_delay + distance, data = flights_train)
augment(lr_fit, new_data = flights_test) %>%
accuracy(truth = delay, estimate = .pred_class)
augment(lda_fit, new_data = flights_test) %>%
accuracy(truth = delay, estimate = .pred_class)
augment(lda_fit, new_data = flights_test) %>%
conf_mat(truth = delay, estimate = .pred_class)
lda_fit_dist <- lda_spec %>%
fit(delay ~ distance, data = flights_train)
augment(lda_fit_dist, new_data = flights_test) %>%
accuracy(truth = delay, estimate = .pred_class)
augment(lda_fit_dist, new_data = flights_test) %>%
conf_mat(truth = delay, estimate = .pred_class)
augment(lda_fit_dist, new_data = flights_test) %>%
conf_mat(truth = delay, estimate = .pred_class)
log(-6 + 0.05*40 + 3.5)
log(-6 + 0.05*40 + 3.5)
e(-6 + 0.05*40 + 3.5)
e^(-6 + 0.05*40 + 3.5)
(-6 + 0.05*40 + 3.5)
-6 + 0.05*40 + 3.5
-6 + 0.05*60 + 3.5
-6 + 0.05*40 + 3.5
View(lda_spec)
# import and store the dataset in data1
auto <- read.csv("https://raw.githubusercontent.com/ParisaDK/CAP5765/main/HW3_Question3.csv", header=T)
# display the data
auto
lr_spec <- logistic_reg() %>%
set_engine("glm") %>%
set_mode("classification")
lr_fit <- lr_spec %>%
fit(mpg ~ ., data = auto_train)
auto_split <- initial_split(auto)
auto_train <- training(auto_split)
auto_test <- testing(auto_split)
lr_spec <- logistic_reg() %>%
set_engine("glm") %>%
set_mode("classification")
lr_fit <- lr_spec %>%
fit(mpg ~ ., data = auto_train)
# import and store the dataset in data1
auto <- read.csv("https://raw.githubusercontent.com/ParisaDK/CAP5765/main/HW3_Question3.csv", header=T)
# display the data
auto[mpg] <- as.factor(auto[mpg])
# import and store the dataset in data1
auto <- read.csv("https://raw.githubusercontent.com/ParisaDK/CAP5765/main/HW3_Question3.csv", header=T)
# display the data
as.factor(auto[mpg])
# import and store the dataset in data1
auto <- read.csv("https://raw.githubusercontent.com/ParisaDK/CAP5765/main/HW3_Question3.csv", header=T)
# display the data
auto$mpg <- as.factor(auto$mpg)
auto_split <- initial_split(auto)
auto_train <- training(auto_split)
auto_test <- testing(auto_split)
lr_spec <- logistic_reg() %>%
set_engine("glm") %>%
set_mode("classification")
lr_fit <- lr_spec %>%
fit(mpg ~ ., data = auto_train)
summary(lr_fit)
tidy(lr_fit)
training_pred <- augment(lr_fit, new_data = auto_test)
training_pred <- augment(lr_fit, new_data = auto_test)
training_pred
bind_cols(
training_pred,
auto_training
) %>%
accuracy(truth = mpg, estimate = .pred_class)
bind_cols(
training_pred,
auto_train
) %>%
accuracy(truth = mpg, estimate = .pred_class)
training_pred %>%
accuracy(truth = mpg, estimate = .pred_class)
training_pred %>%
accuracy(truth = mpg, estimate = .pred_class)
training_pred <- augment(lr_fit, new_data = auto_train)
training_pred
training_pred <- augment(lr_fit, new_data = auto_train)
training_pred
training_pred %>%
accuracy(truth = mpg, estimate = .pred_class)
augment(lr_fit, new_data = auto_test) %>%
accuracy(truth = mpg, estimate = .pred_class)
